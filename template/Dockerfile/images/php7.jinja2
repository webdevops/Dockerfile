{% import 'Dockerfile/provision.jinja2' as provision %}

{% macro alpine(role='') -%}
# Install php environment
RUN /usr/local/bin/apk-install \
        # Install tools
        imagemagick \
        graphicsmagick \
        # Install php (cli/fpm)
        php7-fpm \
        php7-json \
        php7-intl \
        php7-curl \
        php7-mysqli \
        php7-mysqlnd \
        php7-pdo_mysql \
        php7-pdo_sqlite \
        php7-memcached \
        php7-mcrypt \
        php7-gd \
        php7-bcmath \
        php7-soap \
        php7-sqlite3 \
        php7-bz2 \
        php7-calendar \
        php7-ctype \
        php7-pcntl \
        php7-posix \
        php7-sockets \
        php7-sysvmsg \
        php7-sysvsem \
        php7-sysvshm \
        php7-xmlreader \
        php7-exif \
        php7-ftp \
        php7-gettext \
        php7-iconv \
        php7-zip \
        php7-zlib \
        php7-shmop \
        php7-wddx \
        sqlite \
        php7-xmlrpc \
        php7-xsl \
        geoip \
        php7-ldap \
        #php7-memcache \
        php7-redis \
        php7-pear \
        php7-phar \
        php7-openssl \
        php7-session \
        php7-opcache \
        php7-mbstring \
        php7-iconv \
        php7-apcu \
    && ln -s /usr/bin/php7      /usr/bin/php \
    && ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm \
    && pear channel-update pear.php.net \
    && pear upgrade-all \
    && pear config-set auto_discover 1 \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    # PECL workaround, see webdevops/Dockerfile#78
    && sed -i "s/ -n / /" $(which pecl) \
    {{ provision.runRoleInline('php', role) }}
{%- endmacro %}

{% macro debianDotDeb(distribution,role='') -%}
# Install php environment
RUN echo "deb http://packages.dotdeb.org {{ distribution }} all" >> /etc/apt/sources.list \
    && echo "deb-src http://packages.dotdeb.org {{ distribution }} all" >> /etc/apt/sources.list \
    && wget -O- https://www.dotdeb.org/dotdeb.gpg | apt-key add  - \
    && /usr/local/bin/apt-install \
        # Install tools
        imagemagick \
        graphicsmagick \
        # Install php (cli/fpm)
        php7.0-cli \
        php7.0-fpm \
        php7.0-json \
        php7.0-intl \
        php7.0-curl \
        php7.0-mysql \
        php7.0-mcrypt \
        php7.0-gd \
        php7.0-sqlite3 \
        php7.0-ldap \
        php7.0-opcache \
        php7.0-xmlrpc \
        php7.0-xsl \
        php7.0-bz2 \
        php7.0-redis \
        php7.0-memcached \
        php-apcu \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    {{ provision.runRoleInline('php', role) }}
{%- endmacro %}

{% macro debianSury(distribution,role='') -%}
RUN /usr/local/bin/apt-install apt-transport-https lsb-release \
    && echo "deb https://packages.sury.org/php/ {{ distribution }} main" >> /etc/apt/sources.list \
    && echo "deb http://ftp2.de.debian.org/debian/ testing main" >> /etc/apt/sources.list \
    && echo "deb-src http://ftp2.de.debian.org/debian/ testing main" >> /etc/apt/sources.list \
    && wget -O- https://packages.sury.org/php/apt.gpg | apt-key add - \
    && echo "Package: *" > /etc/apt/preferences.d/debian_testing.pref \
    && echo "Pin: origin ftp2.de.debian.org" >> /etc/apt/preferences.d/debian_testing.pref \
    && echo "Pin-Priority: -10" >> /etc/apt/preferences.d/debian_testing.pref \
    && echo "Package: libpcre3" > /etc/apt/preferences.d/libpcre.pref \
    && echo "Pin: release a=testing" >> /etc/apt/preferences.d/libpcre.pref \
    && echo "Pin-Priority: 995" >> /etc/apt/preferences.d/libpcre.pref \
    && apt-get update \
    && apt-get -t testing install -y -f libpcre3 \
    && /usr/local/bin/apt-install \
        # Install tools
        imagemagick \
        graphicsmagick \
        # Install php (cli/fpm)
        php7.0-cli \
        php7.0-fpm \
        php7.0-json \
        php7.0-intl \
        php7.0-curl \
        php7.0-mysql \
        php7.0-mcrypt \
        php7.0-gd \
        php7.0-sqlite3 \
        php7.0-ldap \
        php7.0-opcache \
        php7.0-xmlrpc \
        php7.0-xsl \
        php7.0-bz2 \
        php7.0-redis \
        php7.0-memcached \
        php7.0-zip \
        php7.0-soap \
        php7.0-bcmath \
        php7.0-mbstring \
        php-apcu \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    {{ provision.runRoleInline('php', role) }}
{%- endmacro %}

{% macro debian9(role='') -%}
# Install php environment
RUN /usr/local/bin/apt-install \
        # Install tools
        imagemagick \
        graphicsmagick \
        # Install php (cli/fpm)
        php7.0-cli \
        php7.0-fpm \
        php7.0-json \
        php7.0-intl \
        php7.0-curl \
        php7.0-mysql \
        php7.0-mcrypt \
        php7.0-gd \
        php7.0-sqlite3 \
        php7.0-ldap \
        php7.0-opcache \
        php7.0-soap \
        php7.0-zip \
        php7.0-mbstring \
        php7.0-bcmath \
        php7.0-xmlrpc \
        php7.0-xsl \
        php7.0-bz2 \
        php-apcu \
        php-redis \
        php-memcache \
        php-memcached \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    {{ provision.runRoleInline('php', role) }}
{%- endmacro %}

{% macro ubuntu(role='') -%}
# Install php environment
RUN /usr/local/bin/apt-install \
        # Install tools
        imagemagick \
        graphicsmagick \
        # Install php (cli/fpm)
        php7.0-cli \
        php7.0-fpm \
        php7.0-json \
        php7.0-intl \
        php7.0-curl \
        php7.0-mysql \
        php7.0-mcrypt \
        php7.0-gd \
        php7.0-sqlite3 \
        php7.0-ldap \
        php7.0-opcache \
        php7.0-soap \
        php7.0-zip \
        php7.0-mbstring \
        php7.0-bcmath \
        php7.0-xmlrpc \
        php7.0-xsl \
        php7.0-bz2 \
        php-apcu \
        php-redis \
        php-memcached \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    {{ provision.runRoleInline('php', role) }}
{%- endmacro %}

{% macro centosWebtatic(role='') -%}
RUN rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm \
    && /usr/local/bin/yum-install \
        # Install tools
        ImageMagick \
        GraphicsMagick \
        # Install php (cli/fpm)
        php70w-cli \
        php70w-fpm \
        php70w-common \
        php70w-intl \
        php70w-mysqlnd \
        php70w-pecl-memcached \
        php70w-mcrypt \
        php70w-gd \
        php70w-mbstring \
        php70w-bcmath \
        php70w-soap \
        php70w-pecl-apcu \
        sqlite \
        php70w-xmlrpc \
        php70w-xml \
        geoip \
        php70w-ldap \
        ImageMagick-devel \
        ImageMagick-perl \
        php70w-pear \
        php70w-devel \
        gcc \
        make \
        php70w-opcache \
        php70w-pecl-imagick \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    && cd /tmp \
    && wget https://github.com/phpredis/phpredis/archive/php7.zip -O phpredis.zip \
    && unzip -o /tmp/phpredis.zip \
    && mv /tmp/phpredis-* /tmp/phpredis \
    && cd /tmp/phpredis \
    && phpize \
    && ./configure \
    && make \
    && make install \
    && rm -rf /tmp/phpredis* \
    && rm -rf /tmp/pear \
    && echo "extension=redis.so" > /etc/php.d/redis.ini \
    && yum remove -y php70w-devel

RUN {{ provision.runRole('php', role) }}

{%- endmacro %}